BITWISE OPERATIONS:
1. OR | 
0 | 0 = 0
1 | 0 = 1
0 | 1 = 1
1 | 1 = 1

0101 1111
0000 0101 |
-----------
0101 1111

2. XOR ^ = exclusive OR
0 ^ 0 = 0
1 ^ 0 = 1
0 ^ 1 = 1
1 ^ 1 = 0

0101 1111
0000 0101 ^
-----------
0101 1010

3. AND &
0 & 0 = 0
1 & 0 = 0
0 & 1 = 0
1 & 1 = 1

0101 1111
0000 0101 &
-----------
0000 0101

4. NEGATE ~
~0 = 1
~1 = 0

~ 0101 1111
-----------
  1010 0000

5. LEFT SHIFT  <<
0101 1111 << 2 = 0111 1100

6. RIGHT SHIFT >>
0101 1111 >> 2 = 0001 0111
1101 1111 >> 2 = 1111 0111






















TUTORIAL QUESTION:
uint16_t a = 0x5555, b = 0xAAAA, c = 0x0001;

a | b (bitwise OR)

a & b (bitwise AND)

a ^ b (bitwise XOR)

a & ~b (bitwise AND)

c << 6 (left shift)

a >> 4 (right shift)

a & (b << 1)

b | c

a & ~c


